/*
2351.First Letter to Appear Twice

Description: 
Given a string s consisting of lowercase English letters, return the first letter to appear twice.

Note:

A letter a appears twice before another letter b if the second occurrence of a is before the second occurrence of b.
s will contain at least one letter that appears twice.
 

Example 1:

Input: s = "abccbaacz"
Output: "c"
Explanation:
The letter 'a' appears on the indexes 0, 5 and 6.
The letter 'b' appears on the indexes 1 and 4.
The letter 'c' appears on the indexes 2, 3 and 7.
The letter 'z' appears on the index 8.
The letter 'c' is the first letter to appear twice, because out of all the letters the index of its second occurrence is the smallest.

*/

//Language used: C#
//time complexity: O(n)

//code below
//create a hashset and start traversing the string from left to right
//for char at each index check if it is already in the set
//if it is then return it
//if not, add it 
//if no letters are repeated then return empty string;

public class Solution {
    public char RepeatedCharacter(string s) {
        HashSet<char> repeatedLetter= new HashSet<char>();
        
        for(int i=0;i<s.Length;i++){
            char c=s[i];
            if(repeatedLetter.Contains(c)){
                return c;
            }
            else{
                repeatedLetter.Add(c);
            }
            
        
        }
        
        return ' ';
    }
}
