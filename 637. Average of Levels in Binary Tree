/*

637. Average of Levels in Binary Tree
Difficulty:Easy

Description:
Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer will be accepted.
 

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [3.00000,14.50000,11.00000]
Explanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.
Hence return [3, 14.5, 11].

Example 2:
Input: root = [3,9,20,15,7]
Output: [3.00000,14.50000,11.00000]
 

Constraints:

The number of nodes in the tree is in the range [1, 104].
-231 <= Node.val <= 231 - 1
*/

public class Solution {
    public IList<double> AverageOfLevels(TreeNode root) {
       
        List<double> result = new List<double>();
        List<int> counter = new List<int>();

        AvgOfLevels(root, 1, result, counter);
        for(int i = 0 ; i < result.Count; i++)
        {
            result[i]/= counter[i];
        }
        return result;
    }

    public void AvgOfLevels(TreeNode root, int level, IList<double> result, IList<int> counter)
    {
        if(root == null)
            return;

        if(result.Count < level)
        {
            result.Add(root.val);
            counter.Add(1);
        }
        else
        {
            counter[level-1]++;
            result[level-1] += root.val;
        }

        AvgOfLevels(root.left,level + 1,result, counter);
        AvgOfLevels(root.right,level + 1,result, counter);


    }
}
