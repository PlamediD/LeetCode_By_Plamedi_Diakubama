/*
Description: 
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
*/


/*
Language used: C#
Algo: traverse the array and move any non-zero elements to the front
then, fill in the remaining part of the array with zeros

Space Complexity : O(1). Only constant space is used.
Time Complexity: O(n).
*/

public class Solution {
    public void MoveZeroes(int[] nums) {
        //if array is empty or contains only 1 element, simply return 
        if(nums.Length<=1){
            return; 
        }
        

        int lastNonZero=0; 

        // Traverse the array and move non-zero elements to the front
        for(int i=0; i<nums.Length; i++){
            if(nums[lastNonZero]!=0){
                nums[lastNonZero]=nums[i]; 
                lastNonZero++; 
            }
       
        }


         // Fill the remaining positions with zeros
        for(int i=lastNonZero+1; i<nums.Length; i++){
            nums[i]=0; 
        }
       
    }
}
